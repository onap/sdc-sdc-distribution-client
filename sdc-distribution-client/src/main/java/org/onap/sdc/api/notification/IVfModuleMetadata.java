/*-
 * ============LICENSE_START=======================================================
 * sdc-distribution-client
 * ================================================================================
 * Copyright (C) 2017 AT&T Intellectual Property. All rights reserved.
 * ================================================================================
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ============LICENSE_END=========================================================
 */

package org.onap.sdc.api.notification;

import java.util.List;

/**
 * VF Module in the resource (VF) context
 */
public interface IVfModuleMetadata {
    /**
     * Logical VF  Module Name. Unique Identifier of  VF Module in the resource (VF) context.<br>
     * Ex. : "PCRF-module-0"
     */
    String getVfModuleModelName();

    /**
     * Invariant VF Module UUID generated  on VF Module creation according to RFC 4122 <br>
     * It is generated  on service creation and stays  invariant even if service name /version are updated.
     */
    String getVfModuleModelInvariantUUID();

    /**
     * Resource Version . Ex. : "1"
     */
    String getVfModuleModelVersion();

    /**
     * Global UUID of the VF Module.<br>
     * It is generated by ASDC per each new VF module version. Generated UUID is compliant with RFC 4122. It is a 128-bit value formatted into blocks of hexadecimal digits separated by a hyphen ("-").<br>
     * Ex.: AA97B177-9383-4934-8543-0F91A7A02836
     */
    String getVfModuleModelUUID();


    /**
     * VF  Module textual description. Can be empty.
     */
    String getVfModuleModelDescription();


    /**
     * Is this VF module is the base module of the VF.
     */
    boolean isBase();

    /**
     * Array of VF Module deployment artifacts UUID.
     */
    List<String> getArtifacts();
}
